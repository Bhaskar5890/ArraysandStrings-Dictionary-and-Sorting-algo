public class Solution {
    public int LongestStrChain(string[] words) 
    {
        if(words.Length == 1)
        {
            return 1;
        }
        int max = 0;
        int largest = 0;
        IDictionary<string, int> dict = new Dictionary<string, int>();
        Array.Sort(words, (a,b) => a.Length - b.Length);
        
        foreach(string word in words)
        {
            largest = 0;
            if(!dict.ContainsKey(word))
            {
                dict.Add(word, 1);
            }
            if(word.Length == 1)
            {
                continue;
            }
            for(int i = 0; i < word.Length; i++)
            {
                var subWord = (i - 1 < 0 ? "" : word.Substring(0, i - 0)) + word.Substring(i + 1);
                largest = Math.Max(largest, (dict.ContainsKey(subWord) ? dict[subWord] : 0) + 1);
            }
            dict[word] = largest;
            max = Math.Max(max, largest);
        }
        
        return max;
    }
}