public class Solution {
    public int[][] KClosest(int[][] points, int k) 
    {
      var maxHeap = new SortedSet<(double, int, (int, int))>();
      for (int i = 0; i < points.Length; i++)
      {
        var dist = (points[i][0] * points[i][0]) + (points[i][1] * points[i][1]);
        maxHeap.Add((dist, i, (points[i][0], points[i][1])));
        if (maxHeap.Count > k)
        {
          var maxElement = maxHeap.Max;
          maxHeap.Remove(maxElement);
        }
      }

      var res = new int[k][];
      int index = 0;
      foreach(var item in maxHeap.OrderBy(x => x.Item1))
      {
          res[index] = new int[]{item.Item3.Item1, item.Item3.Item2 };
          index++;
      }

      return res;
    }
}